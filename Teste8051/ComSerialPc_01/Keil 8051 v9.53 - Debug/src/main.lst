C51 COMPILER V9.53.0.0   MAIN                                                              04/13/2017 19:40:52 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\Daniel\Dropbo
                    -x\IFPE\TCC - 2017\rtlinux-tcc\Teste8051\ComSerialPc_01\src\main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(
                    -2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/SiliconLabs/SimplicityStudio/v
                    -4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//De
                    -vice/C8051F330/inc) PRINT(.\src\main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\main.OBJ)

line level    source

   1          
   2          //-----------------------------------------------------------------------------
   3          // Includes
   4          //-----------------------------------------------------------------------------
   5          #include <SI_C8051F330_Register_Enums.h>                // SFR declarations
   6          
   7          //-----------------------------------------------------------------------------
   8          // Definições
   9          //-----------------------------------------------------------------------------
  10          #define SYSCLK      24500000    //Clock do sistema em Hz
  11          #define BAUDRATE        9600            //Velocidade da conexão serial em bps
  12          
  13          SBIT(LED, SFR_P1, 3);   //Define o LED como sendo o P1.3
  14          SBIT(BT, SFR_P0, 7);    //Define o botão como sendo o P0.7
  15          
  16          //INTERRUPT_PROTO(INT0_INTERRUPT, INT0_IRQn);
  17          
  18          void clockInit(void);   //Inicializa o clock do sistema
  19          void portInit(void);    //Inicializa os pinos de I/O
  20          void serialInit(void);  //Inicializa a porta serial
  21          void interrupInit(void);        //Inicializa as opções de interrupção
  22          
  23          //-----------------------------------------------------------------------------
  24          // Rotina Principal
  25          //-----------------------------------------------------------------------------
  26          int main (void)
  27          {
  28   1              int i = 0;
  29   1      
  30   1              clockInit();
  31   1              portInit();
  32   1              serialInit();
  33   1              //interrupInit();
  34   1      
  35   1              LED = 0;
  36   1      
  37   1              while (1) {
  38   2                      i = 0;
  39   2                      if(BT == 0) {
  40   3                              for(i; i < 100000; i++ ){}
  41   3                              if(BT == 0) {
  42   4                                      LED = ~LED;
  43   4                              }
  44   3                      }
  45   2              }
  46   1      }
  47          
  48          //-----------------------------------------------------------------------------
  49          // Rotinas De Inicialização
  50          //-----------------------------------------------------------------------------
  51          
  52          //Inicialização do clock
C51 COMPILER V9.53.0.0   MAIN                                                              04/13/2017 19:40:52 PAGE 2   

  53          void clockInit(void) {
  54   1              //Define o divisor do clock para 1
  55   1              OSCICN |= 0x03;
  56   1      
  57   1              //Define que o MCU deve ser reiniciado em caso de ausência de clock
  58   1              RSTSRC = 0x04;
  59   1      }
  60          
  61          //Inicializa os pinos de I/O
  62          void portInit(void) {
  63   1              //Configura TX e RX para os pinos P0.4 e P0.5 respectivamente
  64   1              XBR0 = 0x01;
  65   1              //Habilita o crossbar
  66   1              XBR1 = 0x40;
  67   1      
  68   1              //Configura os pinos de P0 como entrada digital
  69   1              P0MDIN = 0xFF;
  70   1              //Configura o pino P0.4 (TX) como saída "push-pull"
  71   1              P0MDOUT |= 0x10;
  72   1      
  73   1              //Configura os pinos de P1 como entrada digital
  74   1              P1MDIN = 0xFF;
  75   1              //Configura o pino P1.3 como saída "push-pull"
  76   1              P1MDOUT |= 0x08;
  77   1      }
  78          
  79          //Inicializa a porta serial
  80          void serialInit(void) {
  81   1              /*
  82   1               * Habilita a recepção de dados pela canal serial e configura o modo
  83   1               * como 8 bits e baudrate variável.
  84   1               */
  85   1              //SCON0 = 0x10;
  86   1      
  87   1              /*
  88   1               * Este bloco define as configurações de T1 a partir dos valores das
  89   1               * constantes SYSCLK e BAUDRATE.
  90   1               */
  91   1              /*
  92   1              if (SYSCLK/BAUDRATE/2/256 < 1) {
  93   1                      TH1 = -(SYSCLK/BAUDRATE/2);
  94   1                      CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
  95   1                      CKCON |=  0x08;
  96   1              } else if (SYSCLK/BAUDRATE/2/256 < 4) {
  97   1                      TH1 = -(SYSCLK/BAUDRATE/2/4);
  98   1                      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 01
  99   1                      CKCON |=  0x01;
 100   1              } else if (SYSCLK/BAUDRATE/2/256 < 12) {
 101   1                      TH1 = -(SYSCLK/BAUDRATE/2/12);
 102   1                      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 00
 103   1              } else {
 104   1                      TH1 = -(SYSCLK/BAUDRATE/2/48);
 105   1                      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 10
 106   1                      CKCON |=  0x02;
 107   1              }
 108   1              */
 109   1      }
 110          
 111          //Inicializa as interrupções necessárias ao sistema
 112          void interrupInit(void) {
 113   1              //Habilita a interrupção INT0
 114   1              IE = 0x81;
 115   1      
C51 COMPILER V9.53.0.0   MAIN                                                              04/13/2017 19:40:52 PAGE 3   

 116   1              //Configura INT0 para o pino 0.7 e para ser ativo quando o nível for baixo
 117   1              IT01CF = 0x07;
 118   1      }
 119          
 120          /*
 121          INTERRUPT(INT0_INTERRUPT, INT0_IRQn) {
 122                  LED = ~LED;
 123          }
 124          */
 125          
 126          
 127          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     99    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
